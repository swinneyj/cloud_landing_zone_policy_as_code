// Dev environment setup
provider "aws" {
  region = "us-east-1"
}

module "network" {
  source               = "../../modules/network"
  name_prefix          = "dev"
  vpc_cidr             = "10.0.0.0/16"
  public_subnet_cidrs  = ["10.0.1.0/24", "10.0.2.0/24"]
  private_subnet_cidrs = ["10.0.11.0/24", "10.0.12.0/24"]
  azs                  = ["us-east-1a", "us-east-1b"]
}

output "subnet_ids" {
  value = module.network.vpc_id
}

output "public_subnets" {
  value = module.network.public_subnets_ids[*]
}

output "config_sns_topic_arn" {
  value       = module.aws_config.config_sns_topic_arn
  description = "The ARN of the SNS topic for AWS config"
}

output "config_bucket_id" {
  value       = module.aws_config.config_bucket_id
  description = "The ID of the S3 bucket used by AWS Config"
}

output "config_recorder_name" {
  value       = module.aws_config.config_recorder_name
  description = "The name of the AWS Config recorder"
}

module "iam_ec2_admin" {
  source      = "../../modules/iam"
  name_prefix = "dev-ec2-admin"

  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Effect = "Allow",
        Principal = {
          Service = "ec2.amazonaws.com"
        },
        Action = "sts:AssumeRole"
      }
    ]
  })

  policy_json = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Effect = "Allow",
        Action = [
          "ec2:Describe*",
          "ec2:RunInstances",
          "ec2:TerminateInstances",
          "ec2:StartInstances",
          "ec2:StopInstances",
          "ec2:CreateTags"
        ],
        //restricting to the specific account and environment is adding controls
        Resource = "arn:aws:ec2:us-west-2:535002867674:instance/*",
        Condition = {
          Bool = {
            "aws:RequestTag/Environment" = "dev"
          }
        }
      }
    ]
  })
}

module "cloudtrail" {
  source                    = "../../modules/cloudtrail"
  kms_key_arn               = module.kms_logging.key_arn
  trail_name                = "dev-org-trail"
  cloudtrail_bucket_name    = "dev-cloudtrail-logs-${random_id.suffix.hex}"
  enable_cloudwatch_logs    = true
  force_destroy             = true
  cloudwatch_retention_days = 365
  cloud_watch_logs_role_arn = "arn:aws:iam::123456789012:role/CloudTrailCWLogsRole"
}

resource "random_id" "suffix" {
  byte_length = 4
}

//KMS foor CloudTrail Logs
module "kms_logging" {
  source                  = "../../modules/kms"
  key_alias               = "dev-logging-key"
  alias_key_name          = "alias/dev-logging-key"
  region                  = "us-east-1"
  allowed_services        = ["cloudtrail.amazonaws.com", "logs.us-east-1.amazonaws.com"]
  security_audit_role_arn = "arn:aws:iam::742329686451:role/SecurityAuditRole"
}

//KMS for AWS Config (S3 + SNS)
module "kms_config" {
  source                  = "../../modules/kms"
  key_alias               = "dev-config-key"
  alias_key_name          = "alias/dev-config-key"
  region                  = "us-east-1"
  allowed_services        = ["config.amazonaws.com", "sns.amazonaws.com"]
  security_audit_role_arn = "arn:aws:iam::742329686451:role/SecurityAuditRole"
}

//AWS Config uses it's own key
module "aws_config" {
  source             = "../../modules/config"
  region             = "us-east-1"
  name_prefix        = "dev-config"
  config_bucket_name = "dev-config-logs-${random_id.suffix.hex}"
  kms_key_arn        = module.kms_config.key_arn
}