variable "key_alias" {
  description = "Alias for the KMS key"
  type        = string
}

variable "alias_key_name" {
  description = "Alias name for the KMS key (full alias path)"
  type        = string
}

variable "deletion_window_in_days" {
  description = "KMS key deletion window"
  type        = number
  default     = 30
}

# Create KMS key
resource "aws_kms_key" "kms_key" {
  description             = "Customer-managed KMS key for secure logging/config"
  deletion_window_in_days = var.deletion_window_in_days
  enable_key_rotation     = true
}

# Attach alias
resource "aws_kms_alias" "kms_alias" {
  name          = var.alias_key_name
  target_key_id = aws_kms_key.kms_key.id
}

# Build KMS key policy
data "aws_iam_policy_document" "kms_policy" {
  # Root account admins
  statement {
    sid     = "AllowAccountAdmins"
    effect  = "Allow"
    actions = ["kms:*"]
    principals {
      type        = "AWS"
      identifiers = ["arn:aws:iam::${data.aws_caller_identity.current.account_id}:root"]
    }
    resources = ["*"] # Must be "*" for KMS
  }

  # Allow AWS Config to use key
  statement {
    sid     = "AllowAWSConfig"
    effect  = "Allow"
    actions = [
      "kms:Encrypt",
      "kms:Decrypt",
      "kms:ReEncrypt*",
      "kms:GenerateDataKey*",
      "kms:DescribeKey"
    ]
    principals {
      type        = "Service"
      identifiers = ["config.amazonaws.com"]
    }
    resources = ["*"]
  }

  # Allow CloudTrail to use key
  statement {
    sid     = "AllowCloudTrail"
    effect  = "Allow"
    actions = [
      "kms:Encrypt",
      "kms:Decrypt",
      "kms:ReEncrypt*",
      "kms:GenerateDataKey*",
      "kms:DescribeKey"
    ]
    principals {
      type        = "Service"
      identifiers = ["cloudtrail.amazonaws.com"]
    }
    resources = ["*"]
  }

  # Allow CloudWatch Logs (hardcode us-east-1 for now)
  statement {
    sid     = "AllowCloudWatchLogs"
    effect  = "Allow"
    actions = [
      "kms:Encrypt",
      "kms:Decrypt",
      "kms:ReEncrypt*",
      "kms:GenerateDataKey*",
      "kms:DescribeKey"
    ]
    principals {
      type        = "Service"
      identifiers = ["logs.us-east-1.amazonaws.com"]
    }
    resources = ["*"]
  }

  # Allow Security Account's SecurityAuditRole
  statement {
    sid     = "AllowSecurityAuditRole"
    effect  = "Allow"
    actions = [
      "kms:Decrypt",
      "kms:DescribeKey"
    ]
    principals {
      type        = "AWS"
      identifiers = ["arn:aws:iam::742329686451:role/SecurityAuditRole"]
    }
    resources = ["*"]
  }
}

# Attach the policy to the key
resource "aws_kms_key_policy" "policy" {
  key_id = aws_kms_key.kms_key.id
  policy = data.aws_iam_policy_document.kms_policy.json
}

# Caller identity (needed for root ARN)
data "aws_caller_identity" "current" {}

# Output the key ARN for downstream modules
output "key_arn" {
  description = "ARN of the KMS key"
  value       = aws_kms_key.kms_key.arn
}
